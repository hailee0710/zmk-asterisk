#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0 // base layer
#define MSK 1 // mouse key layer
#define MSC 2 // mouse scoll layer
#define FN 3 //Function layer

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <BASE MSK>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer MSK>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <MSC>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 22>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <1750>;
    };

    scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        tap-ms = <20>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        macro: macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp H &kp I &kp M &kp M &kp E &kp O &kp M &kp E &kp O &kp DOT &kp C &kp O &kp M>;
            label = "MACRO";
            wait-ms = <1>;
            tap-ms = <1>;
        };
    };

    combos {
        compatible = "zmk,combos";

        middle_click_right {
            bindings = <&mkp MCLK>;
            key-positions = <31 32>;
            layers = <1>;
        };

        middle_click_left {
            bindings = <&mkp MCLK>;
            key-positions = <27 28>;
            layers = <1>;
        };

        scroller_left {
            bindings = <&mo 2>;
            key-positions = <27 26>;
            layers = <0 1>;
        };

        scroller_right {
            bindings = <&mo 2>;
            key-positions = <32 33>;
            layers = <0 1>;
        };

        scroller_low {
            bindings = <&mo 2>;
            key-positions = <56 57>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            label = "Base";
            bindings = <
&gresc     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5     &kp N6      &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T      &kp Y       &kp U      &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&mo 3      &kp A     &kp S     &kp D     &kp F     &kp G      &kp H       &kp J      &kp K      &kp L    &kp SEMI  &lt 3 SQT
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B      &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT EQUAL
&kp LCTRL  &kp LGUI  &kp LALT  &kp CAPS  &kp BSPC  &kp ENTER  &kp DELETE  &kp SPACE                      &kp LEFT  &kp RIGHT
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            display-name = "Mouse";
            label = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans     &trans     &trans  &trans     &trans
&mo 3   &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MB4  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans     &mo 3
&trans  &trans  &trans  &trans     &trans     &mkp MB5  &trans  &mkp MB4   &mkp MB5   &trans  &trans     &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans                        &mkp LCLK  &mkp RCLK
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            display-name = "Scroll";
            label = "Scroll";
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans     &trans     &trans  &trans     &trans
&mo 3   &trans  &trans  &mkp LCLK  &mkp RCLK  &mkp MB4  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans     &mo 3
&trans  &trans  &trans  &trans     &trans     &mkp MB5  &trans  &mkp MB4   &mkp MB5   &trans  &trans     &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans                        &mkp LCLK  &mkp RCLK
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNC {
            display-name = "Function";
            label = "Function";
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5   &kp F6  &kp F7    &kp F8    &kp F9     &kp F10        &kp F11
&trans     &trans  &trans  &trans  &trans  &kp F12  &trans  &trans    &kp UP    &trans     &trans         &kp RIGHT_BRACKET
&trans     &trans  &trans  &trans  &trans  &trans   &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans         &trans
&trans     &trans  &trans  &trans  &trans  &trans   &trans  &trans    &trans    &trans     &kp BACKSLASH  &trans
&trans     &trans  &trans  &trans  &trans  &macro   &trans  &trans                         &kp HOME       &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
