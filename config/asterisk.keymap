#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5     &kp N6      &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T      &kp Y       &kp U      &kp I      &kp O    &kp P     &kp BSLH
&mo 1      &kp A     &kp S     &kp D     &kp F     &kp G      &kp H       &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B      &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
&kp LCTRL  &kp LGUI  &kp LALT  &kp CAPS  &kp BSPC  &kp ENTER  &kp DELETE  &kp SPACE                      &kp LEFT  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FN {
            label = "Function";
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
&kp TAB  &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P   &kp BSLH
&mo 1    &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp A   &kp BSLH
&kp N1   &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp L   &kp BSLH
&kp N1   &kp A   &kp S   &kp F   &kp F   &kp G   &kp H   &kp J                   &kp M   &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Mouse {
            label = "Mouse";
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
&kp TAB  &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P   &kp BSLH
&mo 1    &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp A   &kp BSLH
&kp N1   &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp L   &kp BSLH
&kp N1   &kp A   &kp S   &kp F   &kp F   &kp G   &kp H   &kp J                   &kp M   &kp BSLH
            >;
        };
    };
};
