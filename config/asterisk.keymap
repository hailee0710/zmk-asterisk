#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/mouse_keys.dtsi>

// index of keymap layers
#define BASE 0 // default layer
#define FUNC 1 // 
#define MOUSE 2 // mouse key layer

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 2>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        macro: macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp P &kp H &kp I &kp M &kp M &kp E &kp O &kp M &kp E &kp O &kp DOT &kp C &kp O &kp M>;
            label = "MACRO";
            wait-ms = <1>;
            tap-ms = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE_layer {
            label = "Base";
            bindings = <
&gresc     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5     &kp N6      &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T      &kp Y       &kp U      &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&mo 1      &kp A     &kp S     &kp D     &kp F     &kp G      &kp H       &kp J      &kp K      &kp L    &kp SEMI  &lt 1 SQT
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V     &kp B      &kp N       &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT EQUAL
&kp LCTRL  &kp LGUI  &kp LALT  &kp CAPS  &kp BSPC  &kp ENTER  &kp DELETE  &kp SPACE                      &kp LEFT  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNC_layer {
            label = "Function";
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5       &kp F6       &kp F7  &kp F8  &kp F9  &kp F10        &kp F11
&trans     &trans  &trans  &trans  &trans  &kp F12      &trans       &trans  &trans  &trans  &trans         &kp RIGHT_BRACKET
&trans     &trans  &trans  &trans  &trans  &trans       &trans       &trans  &trans  &trans  &trans         &trans
&trans     &trans  &trans  &trans  &trans  &bootloader  &bootloader  &trans  &trans  &trans  &kp BACKSLASH  &trans
&trans     &trans  &trans  &trans  &trans  &macro       &trans       &trans                  &kp HOME       &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        MOUSE_layer {
            label = "Mouse";
            bindings = <
&trans  &trans  &trans     &trans         &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans         &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp LCLK  &mkp MCLK      &mkp RCLK         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &kp C_AC_BACK  &kp C_AC_FORWARD  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans         &trans            &trans  &trans  &trans                  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };
    };
};
